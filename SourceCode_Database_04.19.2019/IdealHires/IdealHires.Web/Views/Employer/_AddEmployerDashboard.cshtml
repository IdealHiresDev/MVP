
@model IdealHires.DTO.Employer.EmployerDashboardDTO
@{
    AjaxOptions options = new AjaxOptions();
    options.HttpMethod = "POST";
   
}

<script type="text/javascript">
    $(document).ready(function () {
        $("#exampleSwitch").change(function () {
            if ($("#exampleSwitch").is(":checked")) {
                $('#IsCurrent').val('True');
                $('#EndAt').val('');
                $('#EndAt').attr("data-val", "false");
                $('#EndAtDiv').hide();
            }
            else {
                $('#IsCurrent').val('False');
                $('#EndAt').attr("data-val", "true");
                $('#EndAtDiv').show();
            }
        });
    });
    function WorkExperienceSuccess(data) {

        if ($("#WorkOption").text() == "Preview") {
            $("#PreviewWorkExpModal").modal('hide');
            LoadWorkDataPreview('Updated');
        }
        if (data == "WorkExpSuccess") {
            $("#WorkExpModal").modal('hide');
            LoadWorkData('Saved');
        } else if (data == "WorkExpEditSuccess") {
            $("#WorkExpModal").modal('hide');
            LoadWorkData('Updated');
        } else {
            $("#WorkExpModal").modal('hide');
            LoadWorkData('');
        }
    }

    $("#btnAddWorkSubmit").on("click", function (e) {
        var formId = e.delegateTarget.form.id;
        $.validator.unobtrusive.parse(formId);
        $("#" + formId).validate();
        var res = $("#" + formId).valid();
        if ($("#" + formId).valid()) {
            $("#" + formId).submit();
        }
        else {
            return false;
        }
    });
</script>
@using (Ajax.BeginForm("EmployerDash", "Employer", null, options, new { @id = "formWork" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-validationdanger" })
    @*@Html.HiddenFor(m => m.Id)
    @Html.HiddenFor(m => m.ProfileId)*@

    <div class="modal-header">
        @if (Model.Id > 0)
        {
            <h4 class="modal-title col-blue"><em class="fas fa-suitcase col-blue"></em> Edit Work Experience</h4>
        }
        else
        {
            <h4 class="modal-title col-blue"><em class="fas fa-suitcase col-blue"></em> Add Work Experience</h4>
        }

        <button type="button" class="close" data-dismiss="modal">&times;</button>
    </div>
    <div class="modal-body">
        <div class="row">
            <div class="col-sm-6">
                <div class="md-form">
                    @Html.TextBoxFor(m => m.JobTitle, new { @class = "form-control" })
                    <label>Position</label>
                    @Html.ValidationMessageFor(m => m.JobTitle, "", new { @class = "text-validationdanger" })
                </div>
            </div>
            <div class="col-sm-6">
                <div class="md-form">
                    @Html.TextBoxFor(m => m.Status, new { @class = "form-control" })
                    <label>Company</label>
                    @Html.ValidationMessageFor(m => m.Status, "", new { @class = "text-validationdanger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-6 col-xs-12">
                <div class="group profile-form">
                    @Html.TextBoxFor(m => m.ExpiryDate, Model.ExpiryDate.HasValue ? Model.ExpiryDate.Value.ToShortDateString() : string.Empty, new { @class = "datepicker", placeholder = "From" })
                    @Html.ValidationMessageFor(m => m.ExpiryDate, "", new { @class = "text-validationdanger" })
                </div>
            </div>
           
        </div>
            
        </div>
  
    <div class="modal-footer">
        <span id="WorkOption" style="visibility:hidden;"></span>
        <button type="button" class="btn btn-outline-grey waves-effect" data-dismiss="modal">Cancel</button>
        <button type="button" class="btn blue-theme-button waves-effect waves-light addWork" id="btnAddWorkSubmit">Submit</button>
    </div>

}