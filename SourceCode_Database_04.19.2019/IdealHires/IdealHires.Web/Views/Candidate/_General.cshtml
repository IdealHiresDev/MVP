@model IdealHires.DTO.Candidate.CandidateBasicDTO
@{
    AjaxOptions options = new AjaxOptions();
    options.HttpMethod = "POST";
    options.OnSuccess = "OnGeneralSuccess";
    options.OnBegin = "ValidateAdd";
}
<script type="text/javascript">
    function OnGeneralSuccess(data) {
        if (data === "BasicSuccess" || data === "BasicEditSuccessNext") {
            ToastMessageSuccess();
            $('#btnGeneral').css("pointer-events", "auto");
            $("#btnContact").click();
            @*var parent_fieldset = $(this).parents('fieldset');
            var current_active_step = $(this).parents('.f1').find('.f1-step.active');
        var progress_line = $(this).parents('.f1').find('.f1-progress-line');

            $.get('@Url.Action("Contact", "Candidate")').done(function (response) {
                $('#contact').empty().html(response);                
                $.validator.unobtrusive.parse(document);
                Materialize.updateTextFields(document);
                if (data === "BasicSuccess") {
                    ToastMessageSuccess();
                } else {
                    ToastMessageUpdate();
                }
                }).fail(function () {
             ToastWarningSuccess();
                });

            parent_fieldset.fadeOut(400, function () {
                current_active_step.removeClass('active').addClass('activated').next().addClass('active');
                bar_progress(progress_line, 'right');
                $(this).next().fadeIn();
                scroll_to_class($('.f1'), 20);
            });*@
        }
        else if (data === "BtnBasicSuccess") {
            ToastMessageSuccess();
        } else if (data === "BasicEditSuccess") {
            ToastMessageUpdate();
        }
        else if (data === "BasicFailure") {
            $('#pWarningMessage').empty().html('There was an error saving information !');
            $('#CommonWarningModel').modal('show');
        }
    }
    $(document).ready(function () {
       
        $("#ResumeFile").change(function () {
            //$("#lblResumeMsg").text("");
            $("#lblResumeMsg").removeClass("text-validationdanger field-validation-error");
        });
        $("#ResumeFile").change(function () {
            var val = $("form input[type=file]").val().toLowerCase();
            var regex = new RegExp("(.*?)\.(pdf|docx|doc)$");
            if (!(regex.test(val))) {
                $("form input[type=file]").val('');
                $("#lblResumeMsg").text("Only pdf or docx or doc file can be uploaded.");
                $("#lblResumeMsg").addClass("text-validationdanger field-validation-error");
            }
        });
        document.getElementById('ResumeTips').setAttribute('title', ResumeTips()); 
    });
    function ResumeTips() {
        var resumeTipsText = "1. Your resume must be easy to read. Always think of the reader’s needs  ";
        resumeTipsText += "2. Use dedicated sections, not just headers, to split up your resume into simple segments. This is to help the reader focus on specific information, like qualifications, etc  ";
        resumeTipsText += "3.Make sure that your resume has a credible, professional look and use color to break up your sections  "
        resumeTipsText += "4.Allow space for your information. Don’t try to cram things in to spaces which are too small.";

        return resumeTipsText;
    }
    function ValidateAdd() {
        var boolValidForm = false;
        debugger;
        if ($("form input[type=file]").val() == "") {
            if ($("#OrgFileName").text() == "") {
                $("#lblResumeMsg").text("Resume upload is required");
                $("#lblResumeMsg").addClass("text-validationdanger field-validation-error");
                boolValidForm = false;
            }
            else {
                boolValidForm = true;
            }
        }
        else if ($("#OrgFileName").text() != "") {
            boolValidForm = true;
        }
        else {
            boolValidForm = true;
        }
        return boolValidForm;
    }
</script>

@using (Ajax.BeginForm("General", "Candidate", null, options, new { enctype = "multipart/form-data", @id = "formBasic" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-validationdanger" })
    @Html.HiddenFor(m => m.Id)
    <div class="row">
        <div class="col-sm-12">
            <div class="md-form">
                @Html.TextBoxFor(m => m.JobTitle, new { @class = "form-control", autocomplete = "off",@maxlength=255 })
                <label class="">Desired Job Title </label>
            </div>
            @Html.ValidationMessageFor(m => m.JobTitle, "", new { @class = "text-validationdanger" })
        </div>
    </div>
    <div class="row">
        <div class="col-sm-6">
            <div class="md-form">
                @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control", autocomplete = "off", @maxlength = 255 })
                <label>First Name * </label>
            </div>
            <div>
                @Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "text-validationdanger" })
            </div>
        </div>
        <div class="col-sm-6">
            <div class="md-form">
                @Html.TextBoxFor(m => m.LastName, new { @class = "form-control", autocomplete = "off", @maxlength = 255 })
                <label>Last Name * </label>
            </div>
            <div>
                @Html.ValidationMessageFor(m => m.LastName, "", new { @class = "text-validationdanger" })
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-6">
            <div class="em-float-right">
                @Html.TextBoxFor(m => m.ResumeFile, new { @class = "upload-file", type = "file"})<em class="far fa-question-circle col-blue ques" id="ResumeTips"></em>
            </div>
            <div class="ft-13 margin-top-minus">
                @if (!string.IsNullOrEmpty(Model.OrgFileName))
                {
                    <span id="OrgFileName">@Model.OrgFileName</span>
                }
                else
                {
                    <span id="lblResumeMsg"></span>
                }
            </div>
        </div>
    </div>
    <div class="f1-buttons">
        <button type="submit" name="submit" value="Save" class="btn btn-blue btn-sm waves-effect waves-light fnt-13 mr-3 btn-sm-save"><i class="fa fa-cloud-upload-alt fnt-1rem mr-2"></i> Save</button>
        <button type="submit" class="btn btn-nextt rounded-circle btn-circle-next"><em class="fa fa-arrow-right"></em></button>
    </div>
}





